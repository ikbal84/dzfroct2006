<script src="http://maps.google.com/maps/api/js?sensor=false"
        type="text/javascript"></script>

@model dzfroct2006.BLL.HotelsQuery

@{
    ViewBag.Title = "HotelsSearchResult";
    Layout = "~/Views/Shared/_Layoutpages.cshtml";
}

@{
    
    var DefaultImage = new dzfroct2006.Models.HotelImages()
    {
        Name = @Resources.Labels.DefaultImageNameValue,
        FilePath = "../Images/NoImage.jpg"
    };

}

<script type="text/javascript">
    var locations = [];
</script>

<div id="filters" class="col-xs-12 col-sm-10 col-md-7">
    @using (Html.BeginForm()) {
        @Html.ValidationSummary(true)
        foreach (var feature in Model.Features)
        {
            <div class="col-xs-12 col-sm-6  col-md-4">
                <input type="checkbox" name="@feature.SearchFeatureName" @feature.SearchFeatureValue/> @feature.SearchFeatureName
            </div>
        }
        <div class="row pull-right" >
            <input type="submit" class="btn btn-info" value="@Resources.Labels.Filter" />
        </div>
    }
</div>

<div class="col-md-7">
  
    @foreach (var item in Model.ResultHotels) {
        <div class="row SearchResult">
            <div class="col-xs-0 col-sm-10 col-md-4" >
                @if(item.HotelImages != null && item.HotelImages.Count > 0)
                {
                    var Image = @item.HotelImages.Where(img => img.isHeader).First();
                    Image = Image != null ? Image : DefaultImage;
                                                                                    
                    <img src="@Image.FilePath" title="@Image.Name" />
                }
                else{
                        <img src="@DefaultImage.FilePath" title="@DefaultImage.Name" />
                }

                @if (item.GeoHotel != null )
                {   
                    <script type="text/javascript">
                        var hotel = ["@item.GeoHotel.InfoMapHotel", "@item.GeoHotel.LatitudeHotel.ToString(System.Globalization.CultureInfo.InvariantCulture)",
                                                                    "@item.GeoHotel.LongitudeHotel.ToString(System.Globalization.CultureInfo.InvariantCulture)",
                                                                    "@item.GeoHotel.AltitudeHotel.ToString(System.Globalization.CultureInfo.InvariantCulture)"];
                        locations.push(hotel);

                    </script>                      
                }  
              
            </div>
            <div class="col-xs-12 col-sm-10 col-md-8">
                <div class="row">
                    <div class="col-md-7">
                        <h1>@Html.ActionLink(item.Name,  "Hotel",  "Hotel",  new{ id = item.HotelID }, new{@Style="text-decoration: initial; color: #565A5C"} )</h1>  
                    </div>
                    <div class="col-md-5 HotelStars" >
                        @{
                            var StarsImgPath = "/Images/stars_" + @item.NbStars + ".jpg";  
                        }      
                        <img src="@StarsImgPath" />
                </div>
                </div>
              
                <div class="row">
                    <div class ="col-xs-12 col-sm-10 col-md-4">
                        <span> @Html.DisplayFor(modelItem => item.Town) @Html.DisplayFor(modelItem => item.Wilaya) </span>
                    </div>

                </div>
                <div class="row well">
                    @Html.DisplayFor(modelItem => item.Description)
                </div>
         
            </div>

        </div>    
    }
    
</div>
 
<div id="map" class="col-xs-0 col-sm-10 col-md-5 HotelsMap"></div>

<script type="text/javascript">
    var map = new google.maps.Map(document.getElementById('map'), {
        zoom: 10,
        center: new google.maps.LatLng(36.709825, 3.210534),
        mapTypeId: google.maps.MapTypeId.ROADMAP
    });

    var infowindow = new google.maps.InfoWindow();


    for (var i = 0; i < locations.length; i++) {
        var marker = new google.maps.Marker({
            position: new google.maps.LatLng(parseFloat(locations[i][1]), parseFloat(locations[i][2])),
            map: map
        });

        google.maps.event.addListener(marker, 'click', (function (marker, i) {
            return function () {
                infowindow.setContent(locations[i][0]);
                infowindow.open(map, marker);
            }
        })(marker, i));
    }
</script>
